AWSTemplateFormatVersion: '2010-09-09'
Description: Crea Lambda y vinculación con API Gateway REST existente

Parameters:
  LambdaS3Key:
    Type: String
    Description: Nombre del archivo ZIP del código de Lambda

  RestApiId:
    Type: String
    Description: ID del API Gateway REST ya creado

  RootResourceId:
    Type: String
    Description: ID del recurso /api ya creado en API Gateway

  LambdaExecutionRole:
    Type: String
    Description: ARN del rol IAM existente que usará la función Lambda

Resources:
  OrderResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId: !Ref RestApiId
      ParentId: !Ref RootResourceId
      PathPart: order

  OrderFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: order_function
      Handler: AWSLambda::AWSLambda.Function::FunctionHandler
      Runtime: dotnet8
      Architectures: [x86_64]
      Timeout: 30
      MemorySize: 256
      Role: !Ref LambdaExecutionRole
      Code:
        S3Bucket: order-function-deploy-654654589924-us-east-1
        S3Key: !Ref LambdaS3Key

  OrderFunctionPermission:
    Type: AWS::Lambda::Permission
    DependsOn:
      - GetOrderMethod
      - PostOrderMethod
      - PutOrderMethod
      - DeleteOrderMethod
    Properties:
      FunctionName: !Ref OrderFunction
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${RestApiId}/*/api/order

  GetOrderMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !Ref RestApiId
      ResourceId: !Ref OrderResource
      HttpMethod: GET
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri: !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${OrderFunction.Arn}/invocations

  PostOrderMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !Ref RestApiId
      ResourceId: !Ref OrderResource
      HttpMethod: POST
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri: !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${OrderFunction.Arn}/invocations

  PutOrderMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !Ref RestApiId
      ResourceId: !Ref OrderResource
      HttpMethod: PUT
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri: !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${OrderFunction.Arn}/invocations

  DeleteOrderMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !Ref RestApiId
      ResourceId: !Ref OrderResource
      HttpMethod: DELETE
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri: !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${OrderFunction.Arn}/invocations

  OptionsOrderMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !Ref RestApiId
      ResourceId: !Ref OrderResource
      HttpMethod: OPTIONS
      AuthorizationType: NONE
      Integration:
        Type: MOCK
        RequestTemplates:
          application/json: '{"statusCode": 200}'
        IntegrationResponses:
          - StatusCode: 200
            ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'GET,POST,PUT,DELETE,OPTIONS'"
            ResponseTemplates:
              application/json: ''
      MethodResponses:
        - StatusCode: 200
          ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true

  DevDeployment:
    Type: AWS::ApiGateway::Deployment
    DependsOn:
      - GetOrderMethod
      - PostOrderMethod
      - PutOrderMethod
      - DeleteOrderMethod
    Properties:
      RestApiId: !Ref RestApiId
      StageName: dev

Outputs:
  LambdaFunctionName:
    Description: Nombre de la función Lambda
    Value: !Ref OrderFunction
